// -p validate -p compile-ref
import "primitives/core.futil";
component add_one () -> () {
  cells {
    ref mem = std_mem_d1(32, 1, 1);
    r = std_reg(32);
    add = std_add(32);
  }

  wires {
    group increment {
      add.left = mem.read_data;
      mem.addr0 = 1'd0;
      add.right = 32'd1;
      r.in = add.out;
      r.write_en = 1'd1;
      increment[done] = r.done;
    }

    group r_to_mem {
      mem.write_data = r.out;
      mem.addr0 = 1'd0;
      mem.write_en = 1'd1;
      r_to_mem[done] = mem.done;
    }
  }

  control {
    seq {
      increment;
      r_to_mem;
    }
  }
}

component drive () -> () {
  cells {
    ref incr = add_one();
    mem = std_mem_d1(32, 1, 1);
  }

  wires {
  }

  control {
    invoke incr[mem=mem]()();
  }
}

component main () -> () {
  cells {
    d = drive();
    incr = add_one();
  }
  wires {

  }
  control { 
    invoke d[incr=incr]()();
  }
}